name: ChatNest CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  server-ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install Dependencies
        run: npm ci
      # - name: Run Tests
      #   run: npm test

  client-ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install Dependencies
        run: npm ci
      # - name: Run Tests
      #   run: npm test

  code-analysis:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}

  build-scan-push-server:
    name: Build, Scan, and Push Server Image
    runs-on: ubuntu-latest
    needs: server-ci
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build server image locally
        uses: docker/build-push-action@v4
        with:
          context: ./server
          file: ./server/Dockerfile
          push: false # Important: Do not push yet
          load: true  # Load the image into the local Docker daemon
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/chatnest-server:latest
      - name: Scan server image with Trivy
        uses: aquasecurity/trivy-action@0.28.0 # Pinned to a specific version
        with:
          image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/chatnest-server:latest'
          format: 'table'
          exit-code: '1' # Fail the build if vulnerabilities are found
          ignore-unfixed: true # Don't fail for vulnerabilities that have no fix yet
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH' # Only fail for these severities
      - name: Push server image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/chatnest-server:latest

  build-scan-push-client:
    name: Build, Scan, and Push Client Image
    runs-on: ubuntu-latest
    needs: client-ci
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build client image locally
        uses: docker/build-push-action@v4
        with:
          context: ./client
          file: ./client/Dockerfile
          push: false # Do not push yet
          load: true  # Load locally
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/chatnest-client:latest
      - name: Scan client image with Trivy
        uses: aquasecurity/trivy-action@0.28.0 # Pinned to a specific version
        with:
          image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/chatnest-client:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      - name: Push client image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/chatnest-client:latest
